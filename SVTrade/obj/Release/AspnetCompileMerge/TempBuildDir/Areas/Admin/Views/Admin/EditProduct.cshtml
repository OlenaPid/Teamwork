@model SVTrade.Models.Product

@{
    ViewBag.Title = "Адмін: змінити " + @Model.title;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Змінити @Model.title</h2>
@using (Html.BeginForm("EditProduct", "Admin"))
{
    <div class="form-group">
        <div class="col-md-10">

           
            <div class="editor-field">
                @Html.EditorFor(x => x.productID, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.title)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.title)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.productCategoryID, new { htmlAttributes = new { @class = "form-control" } })
            </div>

            <div class="dropdown">
                @Html.DropDownListFor(m => m.productCategoryID,
                    (IEnumerable<SelectListItem>)ViewData["AllCategories"], "choose", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.productCategoryID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.imageURL)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.imageURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.imageURL)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.amount)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.amount)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.price)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.price)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.description)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.userID)
            </div>

            <div class="dropdown">
                @Html.DropDownListFor(m => m.userID,
                    (IEnumerable<SelectListItem>) ViewData["AllUsers"], "choose", new {@class = "form-control"})
                @Html.ValidationMessageFor(x => x.userID)
            </div>

            <div class="editor-label">
                @Html.LabelFor(x => x.approved)
            </div>
            <div class="editor-field">
                @Html.EditorFor(x => x.approved, new { htmlAttributes = new { @class = "form-control" } })
            </div>


            <div class="editor-label">
                <input type="submit" value="Зберегти" class="btn btn-default" />
            </div>
            <div class="editor-label">
                @Html.ActionLink("Відмінити і повернутись до списку", "ProductsList")
            </div>

        </div>
    </div>

}